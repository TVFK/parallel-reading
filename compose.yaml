name: parallel-reading
services:
  # Infrastructure
  keycloak-db:
    image: postgres:16
    container_name: keycloak-db
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    networks:
      - boolkus-net

  bks-keycloak:
    image: quay.io/keycloak/keycloak:26.2
    container_name: bks-keycloak
    environment:
      # --- Database Configuration ---
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_DB_SCHEMA: public

      # --- Administrator Credentials ---
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

      # proxy and hostname config
      KC_FEATURES: hostname:v2
      KC_PROXY_HEADERS: forwarded
      KC_HOSTNAME: ${BASE_URL}/auth
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_BACKCHANNEL: false

      # disable themes caching
      KC_SPI_THEME_STATIC_MAX_AGE: -1
      KC_SPI_THEME_CACHE_THEMES: false
      KC_SPI_THEME_CACHE_TEMPLATES: false

      # logging
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
    volumes:
      - './config/keycloak/import:/opt/keycloak/data/import'
      - './config/keycloak/themes:/opt/keycloak/themes'
    command: start-dev --import-realm
    networks:
      - boolkus-net
    depends_on:
      - keycloak-db

  bks-minio:
    image: minio/minio
    container_name: bks-minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - boolkus-net

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,INTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,INTERNAL://kafka:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      -  KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - boolkus-net

  nginx:
    container_name: nginx
    build:
      context: ./config/nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - boolkus-net

  bks-books-db:
    image: postgres:16
    container_name: bks-books-db
    environment:
      POSTGRES_DB: books-db
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - books_db_data:/var/lib/postgresql/data
    networks:
      - boolkus-net

  books-service-cache:
    image: redis:latest
    container_name: books-service-cache
    command: redis-server --requirepass password
    environment:
      REDIS_PASSWORD: password
    ports:
      - "6379:6379"
    networks:
      - boolkus-net

  translation-service-cache:
    image: redis:latest
    container_name: translation-service-cache
    command: redis-server --requirepass password
    environment:
      REDIS_PASSWORD: password
    ports:
      - "6380:6379"
    networks:
      - boolkus-net

  bks-dictionary-db:
    image: postgres:16
    container_name: bks-dictionary-db
    environment:
      POSTGRES_DB: dictionary-db
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - dictionary_db_data:/var/lib/postgresql/data
    networks:
      - boolkus-net

  # Services
  book-service:
    restart: no
    build:
      dockerfile: Dockerfile
      args:
        JAR_FILE: book-service/target/*-exec.jar
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - boolkus-net
    depends_on:
      - bks-books-db
      - books-service-cache

  book-upload-service:
    restart: no
    build:
      dockerfile: Dockerfile
      args:
        JAR_FILE: book-upload-service/target/*-exec.jar
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - boolkus-net

  dictionary-service:
    restart: no
    build:
      dockerfile: Dockerfile
      args:
        JAR_FILE: dictionary-service/target/*-exec.jar
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - boolkus-net
    depends_on:
      - bks-dictionary-db

  translation-service:
    restart: no
    build:
      dockerfile: Dockerfile
      args:
        JAR_FILE: translation-service/target/*-exec.jar
    environment:
      SPRING_PROFILES_ACTIVE: docker
    env_file:
      - ./translation-service/.env
      - .env
    networks:
      - boolkus-net
    depends_on:
      - translation-service-cache

  admin-client:
    restart: no
    build:
      dockerfile: Dockerfile
      args:
        JAR_FILE: admin-client/target/*-exec.jar
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - boolkus-net

volumes:
  minio_data:
  kafka_data:
  books_db_data:
  keycloak_db_data:
  dictionary_db_data:

networks:
  boolkus-net:
    driver: bridge